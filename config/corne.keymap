/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <behaviors.dtsi>

// LAYERS
#define DEFAULT 0
#define NAV     1
#define NUM     2
#define SYM     3
#define FUNC    4
#define MEDIA   5

// MACROS
#define SUPER  LC(LSHIFT)
#define SUPER2 LA(LC(LSHIFT))

 / {
  behaviors {
      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick-tap-ms = <0>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      display-name = "Base";
      bindings = <
        &none   &kp Q   &kp W   &kp E   &kp R   &kp T   /**/    &kp Y   &kp U   &kp I   &kp O   &kp P   &none
        &none   &hm LGUI A   &hm LALT S   &hm LCTRL D   &hm LSHIFT F   &kp G   /**/   &kp H   &hm RSHIFT J   &hm RCTRL K   &hm RALT L   &hm RGUI SEMI   &none
        &none   &kp Z   &kp X   &kp C   &kp V   &kp B   /**/    &kp N   &kp M   &kp COMMA   &kp DOT   &kp FSLH    &none
                  &lt MEDIA ESC   &lt NAV SPACE   &lt NUM TAB   /**/    &lt SYM RET   &kp BSPC   &lt FUNC DEL
      >;
    };

    nav_layer {
      display-name = "Nav";
      bindings = <
        &none   &none   &none   &none   &none   &none   /**/    &kp K_REDO    &kp K_PASTE   &kp K_COPY    &kp K_CUT   &kp K_UNDO   &none
        &none   &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT    &none   /**/    &kp CAPS    &kp K_LEFT    &kp K_DOWN    &kp K_UP    &kp K_RIGHT   &none
        &none   &none   &none   &none   &none   &none   /**/    &kp INS   &kp HOME    &kp PG_DN   &kp PG_UP   &kp END   &none
                                    &trans   &trans   &trans   /**/    &kp RET    &kp BSPC   &kp DEL
      >;
    };

    num_layer {
      display-name = "Num";
      bindings = <
        &none   &none   &none   &none   &none   &none   /**/    &none    &kp KP_7    &kp KP_8   &kp KP_9   &kp KP_MULTIPLY   &none
        &none   &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT    &none   /**/    &kp KP_MINUS    &kp KP_4    &kp KP_5   &kp KP_6   &kp KP_PLUS   &none
        &none   &none   &none   &none   &none   &none   /**/    &kp KP_0    &kp KP_1    &kp KP_2   &kp KP_3   &kp KP_MINUS   &none
                                    &trans   &trans   &trans   /**/    &kp EQUAL    &trans   &trans
      >;
    };

    sym_layer {
      display-name = "Sym";
      bindings = <
        &none   &kp EXCL    &kp AT    &kp LBKT    &kp RBKT   &kp PIPE   /**/    &none    &none   &none   &none   &none   &none
        &none   &kp HASH    &kp DLR   &kp LPAR    &kp RPAR    &kp GRAVE   /**/    &none    &kp RSHIFT   &kp RCTRL   &kp RALT    &kp RGUI    &none
        &none   &kp PRCNT   &kp CARET    &kp LBRC   &kp RBRC   &kp TILDE    /**/    &none    &none   &none   &none   &none   &none
                                    &trans   &trans   &trans   /**/    &trans    &trans   &trans
      >;
    };

    func_layer {
      display-name = "Func";
      bindings = <
        &none   &kp F12   &kp F7    &kp F8    &kp F9    &kp PSCRN   /**/  &none    &none   &none   &none   &none   &none
        &none   &kp F11   &kp F4    &kp F5    &kp F6    &kp SLCK    /**/  &none    &kp RSHIFT   &kp RCTRL   &kp RALT    &kp RGUI    &none
        &none   &kp F10   &kp F1    &kp F2    &kp F3    &kp PAUSE   /**/  &none    &none   &none   &none   &none   &none
                                    &trans   &trans   &trans   /**/    &trans    &trans   &trans
      >;
    };

    media_layer {
      display-name = "Media";
      bindings = <
        &none   &none   &none   &none   &none   &none   /**/    &kp C_BRI_DEC   &kp C_BRI_INC   &none   &none   &none   &none
        &none   &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT    &none   /**/    &none    &kp K_PREV   &kp K_VOL_DN    &kp K_VOL_UP    &kp K_NEXT   &none
        &none   &none   &none   &none   &none   &none   /**/    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_NXT   &bt BT_CLR   &none
                                  &trans   &trans   &trans    /**/    &kp K_STOP    &kp K_PP   &kp K_MUTE
      >;
    };
  };
};
